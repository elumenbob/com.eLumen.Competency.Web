/*
 * Competency Service OpenAPI (JSON) Definition
 *
 * The Competency Service enables the exchange of data between a Competency Records Service Provider and the consumers of the associated data. This service has been described using the IMS Model Driven Modelling approach: this being the Platform Specific Model (PSM) of the service.
 *
 * OpenAPI spec version: 1.0
 * Contact: lmattson@imsglobal.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Newtonsoft.Json;
using System.Web.Http;
using com.eLumen.Standard.Models;
using Swashbuckle.Swagger.Annotations;

namespace com.eLumen.Standard.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class CompetencyApiController : ApiController
    {
        /// <summary>
        /// ...tbd...
        /// </summary>
        /// <remarks>This is a request to the Service Provider to provide all of the Competency Definitions. </remarks>
        /// <param name="limit">To define the download segmentation value i.e. the maximum number of records to be contained in the response.</param>
        /// <param name="offset">The number of the first record to be supplied in the segmented response message.</param>
        /// <param name="sort">Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter</param>
        /// <param name="orderBy">The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).</param>
        /// <param name="filter">The filtering rules to be applied when identifying the records to be supplied in the response message.</param>
        /// <param name="fields">To identify the range of fields that should be supplied in the response message.</param>
        /// <response code="200">...tbd...</response>
        /// <response code="0">StatusInfo Error Report</response>
        [HttpGet]
        [Route("competency/context")]
        [SwaggerOperation("GetAllCompetencyContexts")]
        [SwaggerResponse(200, type: typeof(CompetencyContextSetType))]
        public virtual CompetencyContextSetType GetAllCompetencyContexts(int? limit, int? offset, string sort, string orderBy, string filter, List<string> fields)
        {
            string exampleJson = null;

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CompetencyContextSetType>(exampleJson)
            : default(CompetencyContextSetType);
            return default(CompetencyContextSetType);
        }

        /// <summary>
        /// ...tbd...
        /// </summary>
        /// <remarks>This is a request to the Service Provider to provide all of the Competency Definitions. </remarks>
        /// <param name="limit">To define the download segmentation value i.e. the maximum number of records to be contained in the response.</param>
        /// <param name="offset">The number of the first record to be supplied in the segmented response message.</param>
        /// <param name="sort">Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter</param>
        /// <param name="orderBy">The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).</param>
        /// <param name="filter">The filtering rules to be applied when identifying the records to be supplied in the response message.</param>
        /// <param name="fields">To identify the range of fields that should be supplied in the response message.</param>
        /// <response code="200">...tbd...</response>
        /// <response code="0">StatusInfo Error Report</response>
        [HttpGet]
        [Route("competency/definition")]
        [SwaggerOperation("GetAllCompetencyDefinitions")]
        [SwaggerResponse(200, type: typeof(CompetencyDefinitionSetType))]
        public virtual CompetencyDefinitionSetType GetAllCompetencyDefinitions(int? limit, int? offset, string sort, string orderBy, string filter, List<string> fields)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CompetencyDefinitionSetType>(exampleJson)
            : default(CompetencyDefinitionSetType);
            return default(CompetencyDefinitionSetType);
        }


        /// <summary>
        /// ...tbd...
        /// </summary>
        /// <remarks>This is a request to the Service Provider to provide all of the Competency Relationships. </remarks>
        /// <param name="limit">To define the download segmentation value i.e. the maximum number of records to be contained in the response.</param>
        /// <param name="offset">The number of the first record to be supplied in the segmented response message.</param>
        /// <param name="sort">Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter</param>
        /// <param name="orderBy">The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).</param>
        /// <param name="filter">The filtering rules to be applied when identifying the records to be supplied in the response message.</param>
        /// <param name="fields">To identify the range of fields that should be supplied in the response message.</param>
        /// <response code="200">...tbd...</response>
        /// <response code="0">StatusInfo Error Report</response>
        [HttpGet]
        [Route("competency/relationship")]
        [SwaggerOperation("GetAllCompetencyRelationships")]
        [SwaggerResponse(200, type: typeof(CompetencyRelationshipSetType))]
        public virtual CompetencyRelationshipSetType GetAllCompetencyRelationships(int? limit, int? offset, string sort, string orderBy, string filter, List<string> fields)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CompetencyRelationshipSetType>(exampleJson)
            : default(CompetencyRelationshipSetType);
            return default(CompetencyRelationshipSetType);
        }

        /// <summary>
        /// ...tbd...
        /// </summary>
        /// <remarks>This is a request to the Service Provider to provide the specified Competency Definition.  If the identified record cannot be found then the &#39;unknownobject&#39; status code must be reported.</remarks>
        /// <param name="sourcedId">...tbd...</param>
        /// <param name="limit">To define the download segmentation value i.e. the maximum number of records to be contained in the response.</param>
        /// <param name="offset">The number of the first record to be supplied in the segmented response message.</param>
        /// <param name="sort">Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter</param>
        /// <param name="orderBy">The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).</param>
        /// <param name="filter">The filtering rules to be applied when identifying the records to be supplied in the response message.</param>
        /// <param name="fields">To identify the range of fields that should be supplied in the response message.</param>
        /// <response code="200">...tbd...</response>
        /// <response code="0">StatusInfo Error Report</response>
        [HttpGet]
        [Route("competency/definition/{sourcedId}")]
        [SwaggerOperation("GetCompetencyDefinition")]
        [SwaggerResponse(200, type: typeof(CompetencyDefinitionType))]
        public virtual CompetencyDefinitionType GetCompetencyDefinition(string sourcedId, int? limit, int? offset, string sort, string orderBy, string filter, List<string> fields)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CompetencyDefinitionType>(exampleJson)
            : default(CompetencyDefinitionType);
            return default(CompetencyDefinitionType);
        }


        /// <summary>
        /// ...tbd...
        /// </summary>
        /// <remarks>This is a request to the Service Provider to provide the specified Competency Relationship.  If the identified record cannot be found then the &#39;unknownobject&#39; status code must be reported.</remarks>
        /// <param name="sourcedId">...tbd...</param>
        /// <param name="limit">To define the download segmentation value i.e. the maximum number of records to be contained in the response.</param>
        /// <param name="offset">The number of the first record to be supplied in the segmented response message.</param>
        /// <param name="sort">Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter</param>
        /// <param name="orderBy">The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).</param>
        /// <param name="filter">The filtering rules to be applied when identifying the records to be supplied in the response message.</param>
        /// <param name="fields">To identify the range of fields that should be supplied in the response message.</param>
        /// <response code="200">...tbd...</response>
        /// <response code="0">StatusInfo Error Report</response>
        [HttpGet]
        [Route("competency/relationship/{sourcedId}")]
        [SwaggerOperation("GetCompetencyRelationship")]
        [SwaggerResponse(200, type: typeof(CompetencyRelationshipType))]
        public virtual CompetencyRelationshipType GetCompetencyRelationship(string sourcedId, int? limit, int? offset, string sort, string orderBy, string filter, List<string> fields)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CompetencyRelationshipType>(exampleJson)
            : default(CompetencyRelationshipType);
            return default(CompetencyRelationshipType);
        }
    }
}
